version: "3.8"

services:
  ## SIMPLE LOGIN
  ## ============

  postgres:
    image: postgres:12.1
    container_name: sl-db
    env_file: .env
    healthcheck:
      test: ["CMD", "pg_isready"]
      interval: 10s
      retries: 3
      start_period: 1s
    volumes:
      - ./db:/var/lib/postgresql/data
    restart: unless-stopped

  migration:
    image: simplelogin/app:$SL_VERSION
    command: ["alembic", "upgrade", "head"]
    container_name: sl-migration
    env_file: .env
    volumes:
      - ./pgp:/sl/pgp
      - ./upload:/code/static/upload
      - ./dkim.key:/dkim.key
      - ./dkim.pub.key:/dkim.pub.key
    depends_on:
      postgres:
        condition: service_healthy

  init:
    image: simplelogin/app:$SL_VERSION
    command: ["python", "init_app.py"]
    container_name: sl-init
    env_file: .env
    volumes:
      - ./pgp:/sl/pgp
      - ./upload:/code/static/upload
      - ./dkim.key:/dkim.key
      - ./dkim.pub.key:/dkim.pub.key
    depends_on:
      migration:
        condition: service_completed_successfully

  app:
    image: simplelogin/app:$SL_VERSION
    container_name: sl-app
    env_file: .env
    volumes:
      - ./pgp:/sl/pgp
      - ./upload:/code/static/upload
      - ./dkim.key:/dkim.key
      - ./dkim.pub.key:/dkim.pub.key
    restart: unless-stopped
    depends_on:
      init:
        condition: service_completed_successfully

  email:
    image: simplelogin/app:$SL_VERSION
    command: ["python", "email_handler.py"]
    container_name: sl-email
    env_file: .env
    volumes:
      - ./pgp:/sl/pgp
      - ./upload:/code/static/upload
      - ./dkim.key:/dkim.key
      - ./dkim.pub.key:/dkim.pub.key
    restart: unless-stopped
    depends_on:
      init:
        condition: service_completed_successfully

  job-runner:
    image: simplelogin/app:$SL_VERSION
    command: ["python", "job_runner.py"]
    container_name: sl-job-runner
    env_file: .env
    volumes:
      - ./pgp:/sl/pgp
      - ./upload:/code/static/upload
      - ./dkim.key:/dkim.key
      - ./dkim.pub.key:/dkim.pub.key
    restart: unless-stopped
    depends_on:
      init:
        condition: service_completed_successfully

  ## POSTFIX
  ## =================
  postfix:
    image: private/postfix:latest
    build:
      context: ./postfix/Dockerfiles/
      dockerfile: Dockerfile
    container_name: postfix
    env_file: .env
    environment:
      MAIL_CONFIG: /etc/postfix/conf.d/
    ports:
      - "25:25"
      - "587:587"
    volumes:
      - ./postfix/conf.d/:/etc/postfix/conf.d:rw
      - ./acme.sh/conf.d/:/etc/acme.sh/:ro
    restart: unless-stopped
    depends_on:
      - email

  ## NGINX & SSL CERTS
  ## =================
  nginx:
    image: nginx:1.25.2
    container_name: nginx
    volumes:
      - ./nginx/conf.d/:/etc/nginx/conf.d/:ro
      - ./nginx/ssl/:/etc/nginx/ssl/:ro
      - ./acme.sh/conf.d/:/etc/acme.sh/:ro
      - ./acme.sh/www/:/var/www/:ro
    ports:
      - "80:80"
      - "443:4433"
    restart: unless-stopped

  acme.sh:
    image: private/acme.sh:latest
    build:
      context: ./acme.sh/Dockerfiles/
      dockerfile: Dockerfile
    container_name: acme.sh
    env_file: .env
    volumes:
      - ./acme.sh/www/:/var/www/:rw
      - ./acme.sh/conf.d/:/root/.acme.sh/:rw
      - ./nginx/conf.d/:/etc/nginx/conf.d/:rw
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - nginx

networks:
  default:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 10.0.0.0/24
          gateway: 10.0.0.1
